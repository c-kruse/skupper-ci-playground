version: 2.1
orbs:
    docker: circleci/docker@1.0.1
    kube-orb: circleci/kubernetes@0.11.0
    go: circleci/go@1.7.1

executors:
  go_cimg:
    docker:
      - image: cimg/go:1.22

  local_cluster_test_executor:
    machine:
      image: ubuntu-2204:2022.10.2
    resource_class: large

  skopeoimg:
    docker:
      - image: quay.io/containers/skopeo:v1.16


commands:
  skopeo-install:
    description: Install Skopeo
    steps:
      - run:
          name: Apt Install Skopeo
          command: sudo apt-get update -y && sudo apt-get install -y skopeo

  compile_go_program:
    description: Compile specified platform.
    parameters:
      platform:
        type: string
      goos:
        type: string
      goarch:
        type: string
      exesuffix:
        default: ""
        type: string
    steps:
      - run:
          name: Building << parameters.platform >>
          command: >-
            VERSION="${CIRCLE_TAG:-ci-${CIRCLE_BUILD_NUM}}";
            GOOS=<< parameters.goos >>
            GOARCH=<< parameters.goarch >>
            go build -ldflags "-X github.com/skupperproject/skupper/pkg/version.Version=${VERSION}"
            -o dist/<< parameters.platform >>/skupper<< parameters.exesuffix >>
            ./cmd/skupper
      - run:
          name: Audit << parameters.platform >>
          command: >-
            sha512sum dist/<< parameters.platform >>/skupper<< parameters.exesuffix >>;
            file dist/<< parameters.platform >>/skupper<< parameters.exesuffix >>;
            go version -m dist/<< parameters.platform >>/skupper<< parameters.exesuffix >>;

yaml-templates:
  branch_filters: &run_for_all_branches
    filters:
      tags:
        ignore: /.*/

  main_branch_filters: &run_for_main_branch
    filters:
      branches:
        ignore: /.*/
        only: /main/

  v2_branch_filters: &run_for_v2_branch
    filters:
      branches:
        ignore: /.*/
        only: /v2/

  release_filters: &run_for_numeric_tags
    filters:
      branches:
        ignore: /.*/
      tags:
        only: /[0-9].*/

  v2_release_requires: &v2_release_requires
    requires:
      - build-all
      - test-skupper-binary
      - test

workflows:
  version: 2.1
  release:
    jobs:
      - build-all:
         <<: *run_for_numeric_tags
      - test-skupper-binary:
          <<: *run_for_numeric_tags
          matrix:
            parameters:
              image:
                - quay.io/centos/centos:stream8
                - quay.io/centos/centos:stream9
                - quay.io/fedora/fedora:38
                - quay.io/fedora/fedora:41
                - docker.io/debian:bookworm
                - docker.io/alpine:latest
          requires:
            - build-all
      - test:
          <<: *run_for_numeric_tags
      - build-oci-images:
          <<: *run_for_numeric_tags
          image_tag: << pipeline.git.tag >>
          registry: quay.io/ckruse
      - publish-oci-images:
          <<: *run_for_numeric_tags
          image_tag: << pipeline.git.tag >>
          registry: quay.io/ckruse
          requires:
            - build-all
            - test-skupper-binary
            - test
            - build-oci-images
          context:
            - quay-ckruse
      - publish-github-release-artifacts:
          <<: *run_for_numeric_tags
          requires:
            - publish-oci-images
          context:
            - github-ckruse
  build:
    jobs:
      - build-all:
          <<: *run_for_all_branches
      - test-skupper-binary:
          <<: *run_for_all_branches
          matrix:
            parameters:
              image:
                - quay.io/centos/centos:stream8
                - quay.io/centos/centos:stream9
                - quay.io/fedora/fedora:38
                - quay.io/fedora/fedora:41
                - docker.io/debian:bookworm
                - docker.io/alpine:latest
          requires:
            - build-all
      - test:
          <<: *run_for_all_branches
      - build-oci-images:
          image_tag: << pipeline.git.revision >>
          registry: quay.io/ckruse
          <<: *run_for_all_branches
      - publish-oci-images:
          <<: *run_for_v2_branch
          image_tag: v2-latest
          registry: quay.io/ckruse
          requires:
            - build-all
            - test-skupper-binary
            - test
            - build-oci-images
          context:
            - quay-ckruse
      - publish-github-prerelease-artifacts:
          <<: *run_for_v2_branch
          version: v2-release
          requires:
            - publish-oci-images
          context:
            - github-ckruse

jobs:
  test:
    executor:
      name: go_cimg
    steps:
      - checkout
      - run:
          name: "Enforce Go Formatted Code"
          command: >
              if [ `make format -s | wc -l` -ne 0 ]; then
                git --no-pager diff
                echo "Bad formatting! execute \"\$make format\" locally and push again!"
                exit 1
              fi
      - go/mod-download-cached
      - run:
          name: Creating artifacts directory
          command: mkdir /tmp/artifacts
      - run:
          name: Run tests
          command: make cover
      - run:
          name: Generating HTML coverage report
          command: |
            mv ./cover.out /tmp/artifacts
            go tool cover -html /tmp/artifacts/cover.out -o /tmp/artifacts/cover.html
      - store_artifacts:
          path: /tmp/artifacts
          destination: test-artifacts

  build-oci-images:
    executor: local_cluster_test_executor
    parameters:
      image_tag:
        type: string
      registry:
        type: string
        default: "quay.io/skupper"
    steps:
      - docker/install-docker
      - skopeo-install
      - checkout
      - run: docker buildx create --use --name skupper-buildx
      - run: make multiarch-oci IMAGE_TAG=<< parameters.image_tag >> REGISTRY=<< parameters.registry >>
      - run:
          name: Inspect images
          command: make describe-multiarch-oci IMAGE_TAG=<< parameters.image_tag >>
      - persist_to_workspace:
          root: ./
          paths:
            - oci-archives/

  publish-oci-images:
    executor:
      name: skopeoimg
    parameters:
      image_tag:
        type: string
      registry:
        type: string
        default: "quay.io/skupper"
    steps:
      - attach_workspace:
          at: .
      - run:
          name: skopeo login
          command: |
            skopeo login quay.io -u ${QUAY_LOGIN} -p ${QUAY_PASSWORD}
      - run:
          name: publish images
          command: |
            make describe-multiarch-oci push-multiarch-oci REGISTRY="<< parameters.registry >>" IMAGE_TAG="<< parameters.image_tag >>"

  build-all:
    executor:
      name: go_cimg
    environment:
      CGO_ENABLED: 0
    steps:
      - checkout
      - go/mod-download-cached
      - run: make

      - compile_go_program:
          goos: linux
          goarch: amd64
          platform: linux-amd64

      - compile_go_program:
          goos: windows
          goarch: amd64
          platform: windows-amd64
          exesuffix: ".exe"

      - compile_go_program:
          goos: darwin
          goarch: amd64
          platform: mac-amd64

      - compile_go_program:
          goos: darwin
          goarch: arm64
          platform: mac-arm64

      - compile_go_program:
          goos: linux
          goarch: arm64
          platform: linux-arm64

      - compile_go_program:
          goos: linux
          goarch: s390x
          platform: linux-s390x

      - persist_to_workspace:
          root: .
          paths:
            - dist

  test-skupper-binary:
    description: Run skupper command in a specific image
    parameters:
      image:
        type: string
    docker:
      - image: << parameters.image >>
    steps:
      - attach_workspace:
          at: .
      - run:
          name: "Run the skupper binary"
          command: |
            cd dist/linux-amd64
            ./skupper site

  smoke-tests:
    executor: local_cluster_test_executor
    steps:
      - checkout
      - run:
          name: Install test dependencies
          command: |
            curl -Lo kind https://github.com/kubernetes-sigs/kind/releases/download/v0.24.0/kind-linux-amd64
            chmod +x kind
            sudo mv kind /usr/local/bin/

            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            chmod +x kubectl
            sudo mv kubectl /usr/local/bin/

            curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
            chmod 700 get_helm.sh
            ./get_helm.sh
      - attach_workspace:
          at: /tmp/
      - run:
          name: Start Cluster
          command: |
            kind cluster create

      - run:
          name: Vet test deployments
          command: |
            export KUBECONFIG=~/.kube/kind-config-skupper-dev
            kubectl apply -f ./examples/test.yaml
            SKUPPER_PLATFORM=docker ./e2e/vet.sh -n public-lb 
            SKUPPER_PLATFORM=docker ./e2e/vet.sh -n public-gw 
            SKUPPER_PLATFORM=docker ./e2e/vet.sh -n public-nginx
            SKUPPER_PLATFORM=docker ./e2e/vet.sh -n public-nodeport
  generate-manifest:
    executor:
      name: go_cimg
    steps:
      - checkout
      - go/mod-download-cached
      - setup_remote_docker
      - run: make generate-manifest
      - run: mkdir skupper-manifest
      - run: cp ./manifest.json skupper-manifest
      - persist_to_workspace:
          root: .
          paths:
            - skupper-manifest

  publish-github-release-artifacts:
    docker:
      - image: cibuilds/github:0.10
    steps:
      - attach_workspace:
          at: .
      - run:
          name: "Create a Draft Release on GitHub"
          command: |
            VERSION="${CIRCLE_TAG}"
            BASEDIR=`pwd`
            mkdir "${BASEDIR}/archives"
            for p in `ls dist` ; do
              cd "$BASEDIR/dist/$p"
              if [[ $p == windows* ]] ; then
                zip -q "${BASEDIR}/archives/skupper-cli-${VERSION}-$p.zip" *
              else
                tar -zcf "${BASEDIR}/archives/skupper-cli-${VERSION}-$p.tgz" *
              fi
            done
            cd ${BASEDIR}
            cp "${BASEDIR}/skupper-manifest/manifest.json" "${BASEDIR}/archives"
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -replace -prerelease -draft ${VERSION} "${BASEDIR}/archives"

  publish-github-prerelease-artifacts:
    docker:
      - image: cibuilds/github:0.10
    parameters:
      version:
        type: string
    steps:
      - attach_workspace:
          at: .
      - run:
          name: "Create a V2 Pre-Release on GitHub"
          command: |
            VERSION="<< parameters.version >>"
            BASEDIR=`pwd`
            mkdir "${BASEDIR}/archives"
            for p in `ls dist` ; do
              cd "$BASEDIR/dist/$p"
              if [[ $p == windows* ]] ; then
                zip -q "${BASEDIR}/archives/skupper-cli-${VERSION}-$p.zip" *
              else
                tar -zcf "${BASEDIR}/archives/skupper-cli-${VERSION}-$p.tgz" *
              fi
            done
            cd ${BASEDIR}
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -replace -prerelease ${VERSION} "${BASEDIR}/archives"
