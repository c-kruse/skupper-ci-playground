version: 2.1
orbs:
    docker: circleci/docker@1.0.1
    go: circleci/go@1.7.1

executors:
  go_cimg:
    resource_class: medium
    docker:
      - image: cimg/go:1.22

  local_cluster_test_executor:
    machine:
      image: ubuntu-2404:2024.08.1
    resource_class: large

commands:
  skopeo-install:
    description: Install Skopeo
    steps:
      - run:
          name: Apt Install Skopeo
          command: sudo apt-get update -y && sudo apt-get install -y skopeo

  podman-install:
    description: Install Podman Multiarch
    steps:
      - run:
          name: Install Packages
          command: |
            sudo apt-get update -y \
              && sudo apt-get install -y podman qemu-user-static
      - run:
          name: Configure Podman for CircleCI
          command: |
            # Bypassing CircleCI issue with user session (see: https://github.com/containers/podman/issues/16529)
            mkdir -p ~/.config/containers/containers.conf.d
            ( echo '[containers]' ; echo 'cgroups = "disabled"' ) > ~/.config/containers/containers.conf.d/podman-circleci-issue.conf
            ( echo '[engine]' ; echo 'cgroup_manager = "cgroupfs"' ) >> ~/.config/containers/containers.conf.d/podman-circleci-issue.conf
            # Starting systemd user service
            systemctl --user start podman.socket

yaml-templates:
  branch_filters: &run_for_all_branches
    filters:
      tags:
        ignore: /.*/

  v2_branch_filters: &run_for_v2_branch
    filters:
      branches:
        ignore: /.*/
        only: /v2/

  release_filters: &run_for_numeric_tags
    filters:
      branches:
        ignore: /.*/
      tags:
        only: /[0-9].*/

  v2_release_requires: &v2_release_requires
    requires:
      - build-linux-amd64
      - build-linux-arm64
      - build-cli-other
      - build-web
      - test
      - build-oci-images

workflows:
  version: 2.1
  release:
    jobs:
      - build-dist:
          <<: *run_for_numeric_tags
          name: build-linux-amd64
          containerPlatforms: linux-amd64
      - build-dist:
          <<: *run_for_numeric_tags
          name: build-linux-arm64
          containerPlatforms: linux-arm64
      - build-dist:
          <<: *run_for_numeric_tags
          name: build-web
          web: true
      - build-dist:
          <<: *run_for_numeric_tags
          name: build-cli-other
          cliPlatforms: darwin-amd64 darwin-arm64 windows-amd64 linux-s390x
      - test:
          <<: *run_for_numeric_tags
      - build-oci-images:
          <<: *run_for_numeric_tags
          image_tag: << pipeline.git.tag >>
          registry: quay.io/ckruse/skupper
          requires:
            - build-linux-amd64
            - build-linux-arm64
            - build-web
      - publish-oci-images:
          <<: *run_for_numeric_tags
          <<: *v2_release_requires
          image_tag: << pipeline.git.tag >>
          registry: quay.io/ckruse/skupper
          context:
            - quay-ckruse
      - generate-manifest:
          <<: *run_for_numeric_tags
          requires:
            - publish-oci-images
      - publish-github-release-artifacts:
          <<: *run_for_numeric_tags
          requires:
            - generate-manifest
            - build-linux-amd64
            - build-linux-arm64
            - build-cli-other
          context:
            - github-ckruse

  build:
    jobs:
      - build-dist:
          name: build-linux-amd64
          containerPlatforms: linux-amd64
      - build-dist:
          name: build-linux-arm64
          containerPlatforms: linux-arm64
      - build-dist:
          name: build-web
          web: true
      - build-dist:
          name: build-cli-other
          cliPlatforms: darwin-amd64 darwin-arm64 windows-amd64 linux-s390x
      - test:
          <<: *run_for_all_branches
      - build-oci-images:
          image_tag: v2-latest
          registry: quay.io/ckruse/skupper
          <<: *run_for_all_branches
          requires:
            - build-linux-amd64
            - build-linux-arm64
            - build-web
      - publish-oci-images:
          <<: *run_for_v2_branch
          <<: *v2_release_requires
          registry: quay.io/ckruse/skupper
          image_tag: v2-latest
          context:
            - quay-ckruse
      - generate-manifest:
          requires:
            - publish-oci-images
      - publish-github-prerelease-artifacts:
          <<: *run_for_v2_branch
          version: v2-release
          requires:
            - generate-manifest
            - build-linux-amd64
            - build-linux-arm64
            - build-cli-other
          context:
            - github-ckruse

jobs:
  test:
    executor:
      name: go_cimg
    steps:
      - checkout
      - go/mod-download-cached
      - run:
          name: "Enforce Go Formatted Code"
          command: >
              if [ `make format -s | wc -l` -ne 0 ]; then
                git --no-pager diff
                echo "Bad formatting! execute \"\$make format\" locally and push again!"
                exit 1
              fi
      - run:
          name: Creating artifacts directory
          command: mkdir /tmp/artifacts
      - run:
          name: Run tests
          command: make cover
      - run:
          name: Generating HTML coverage report
          command: |
            mv ./cover.out /tmp/artifacts
            go tool cover -html /tmp/artifacts/cover.out -o /tmp/artifacts/cover.html
      - store_artifacts:
          path: /tmp/artifacts
          destination: test-artifacts

  generate-manifest:
    executor:
      name: go_cimg
    steps:
      - checkout
      - go/mod-download-cached
      - setup_remote_docker
      - run: make generate-manifest
      - run: mkdir skupper-manifest
      - run: cp ./manifest.json skupper-manifest
      - persist_to_workspace:
          root: .
          paths:
            - skupper-manifest

  build-oci-images:
    executor: local_cluster_test_executor
    parameters:
      image_tag:
        type: string
      registry:
        type: string
        default: "quay.io/skupper"
    steps:
      - podman-install
      - checkout
      - attach_workspace:
          at: .
      - run: make podman-build-multiarch IMAGE_TAG=<< parameters.image_tag >> REGISTRY=<< parameters.registry >>
      - persist_to_workspace:
          root: .
          paths:
            - oci-archives

  publish-oci-images:
    executor:
      name: go_cimg
    environment:
      REGISTRY_AUTH_FILE: ~/.skopeoauth.json
    parameters:
      image_tag:
        type: string
      registry:
        type: string
        default: "quay.io/skupper"
    steps:
      - skopeo-install
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: skopeo login
          command: |
            skopeo login quay.io -u ${QUAY_LOGIN} -p ${QUAY_PASSWORD}
      - run:
          name: publish images
          command: |
            make describe-multiarch-oci push-multiarch-oci REGISTRY="<< parameters.registry >>" IMAGE_TAG="<< parameters.image_tag >>"

  build-dist:
    description: Build skupper components
    executor:
      name: go_cimg
    parameters:
      containerPlatforms:
        type: string
        default: ""
      cliPlatforms:
        type: string
        default: ""
      web:
        type: boolean
        default: false
    steps:
      - checkout
      - go/mod-download-cached
      - setup_remote_docker
      - run:
          name: Run make dist
          command: |
            make dist \
              DISTBUILD_CONTAINER_PLATFORMS=<< parameters.containerPlatforms >> \
              DISTBUILD_CLI_PLATFORMS=<< parameters.cliPlatforms >> \
              DISTBUILD_WEB_PLATFORM=<< parameters.web >>
      - run:
          name: Print Digests
          command: |
            find ./dist/ -type f -exec sha512sum '{}' \;
      - run:
          name: Audit executables
          command: |
            set -e
            for exe in ./dist/**/*; do
              if [[ ! -f "$exe" ]] || [[ ! -x "$exe" ]]; then
                      echo "skipping $exe"
                      continue
              fi
              if [[ "$exe" =~ linux ]]; then
                file "$exe" | grep "statically linked"
              fi
              ldd "$exe" 2>&1 | grep "not a dynamic executable"
            done

      - persist_to_workspace:
          root: .
          paths:
            - dist

  publish-github-release-artifacts:
    docker:
      - image: cibuilds/github:0.10
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: "Create a Draft Release on GitHub"
          command: |
            VERSION="${CIRCLE_TAG}"
            make archive
            cp ./oci-digests/* ./archives
            cp ./skupper-manifest/manifest.json ./archives
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -replace -prerelease -draft ${VERSION} "${BASEDIR}/archives"

  publish-github-prerelease-artifacts:
    docker:
      - image: cibuilds/github:0.10
    parameters:
      version:
        type: string
    steps:
      - attach_workspace:
          at: .
      - run:
          name: "Create a V2 Pre-Release on GitHub"
          command: |
            VERSION="<< parameters.version >>"
            make archives
            cp ./oci-digests/* ./archives
            cp ./skupper-manifest/manifest.json ./archives
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -replace -prerelease ${VERSION} "${BASEDIR}/archives"
