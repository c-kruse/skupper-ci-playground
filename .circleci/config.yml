version: 2.1
orbs:
    docker: circleci/docker@1.0.1
    kube-orb: circleci/kubernetes@0.11.0
    go: circleci/go@1.7.1

executors:
  go_cimg:
    docker:
      - image: cimg/go:1.22

  local_cluster_test_executor:
    machine:
      image: ubuntu-2204:2022.10.2
    resource_class: large

yaml-templates:
  branch_filters: &run_for_all_branches_and_numeric_tags
    filters:
      tags:
        only: /[0-9].*/

  main_branch_filters: &run_for_main_branch
    filters:
      branches:
        ignore: /.*/
        only: /main/

  v2_branch_filters: &run_for_v2_branch
    filters:
      branches:
        ignore: /.*/
        only: /v2/

  release_filters: &run_for_numeric_tags
    filters:
      branches:
        ignore: /.*/
      tags:
        only: /[0-9].*/

  release_requires: &release_requires
    requires:
      - build-all
      - test-skupper-binary
      - test
      - main_tests_minikube_local_cluster
      - policy_tests_minikube_local_cluster

  v2_release_requires: &v2_release_requires
    requires:
      - build-all
      - test-skupper-binary
      - test

workflows:
  version: 2.1
  build-workflow:
    jobs:
      - build-all:
          <<: *run_for_all_branches_and_numeric_tags
      - test-skupper-binary:
          <<: *run_for_all_branches_and_numeric_tags
          matrix:
            parameters:
              image:
                - quay.io/centos/centos:stream8
                - quay.io/centos/centos:stream9
                - quay.io/fedora/fedora:38
                - quay.io/fedora/fedora:39
                - docker.io/debian:bullseye-slim
          requires:
            - build-all
      - test:
          <<: *run_for_all_branches_and_numeric_tags
      - build_and_save_test_images:
          <<: *run_for_all_branches_and_numeric_tags

jobs:
  test:
    executor:
      name: go_cimg
    steps:
      - checkout
      - go/mod-download-cached
      - run:
          name: "Enforce Go Formatted Code"
          command: >
              if [ `make format -s | wc -l` -ne 0 ]; then
                git --no-pager diff
                echo "Bad formatting! execute \"\$make format\" locally and push again!"
                exit 1
              fi
      - run:
          name: Creating artifacts directory
          command: mkdir /tmp/artifacts
      - run:
          name: Run tests
          command: make cover
      - run:
          name: Generating HTML coverage report
          command: |
            mv ./cover.out /tmp/artifacts
            go tool cover -html /tmp/artifacts/cover.out -o /tmp/artifacts/cover.html
      - store_artifacts:
          path: /tmp/artifacts
          destination: test-artifacts

  build_and_save_test_images:
    executor: local_cluster_test_executor
    steps:
      - docker/install-docker
      - checkout
      - run: make -e docker-build
      - run:
          name: persisting images to workspace
          command: |
            mkdir /tmp/images
            docker tag quay.io/skupper/controller:v2-latest 0.0.0.0:5000/controller
            docker save 0.0.0.0:5000/controller | gzip > /tmp/images/controller.gz
            docker tag quay.io/skupper/config-sync:v2-latest 0.0.0.0:5000/config-sync
            docker save 0.0.0.0:5000/config-sync | gzip > /tmp/images/config-sync.gz
            docker tag quay.io/skupper/network-console-collector:v2-latest 0.0.0.0:5000/network-console-collector
            docker save 0.0.0.0:5000/network-console-collector | gzip > /tmp/images/network-console-collector.gz
            docker tag quay.io/skupper/bootstrap:v2-latest 0.0.0.0:5000/bootstrap
            docker save 0.0.0.0:5000/bootstrap | gzip > /tmp/images/bootstrap.gz
      - persist_to_workspace:
          root: /tmp
          paths:
            - images/

  build-all:
    executor:
      name: go_cimg
    environment:
      CGO_ENABLED: 0
    steps:
      - checkout
      - go/mod-download-cached
      - run: curl -sfL https://goreleaser.com/static/run | bash -s build --snapshot
      - persist_to_workspace:
          root: .
          paths:
            - dist

  test-skupper-binary:
    description: Run skupper command in a specific image
    parameters:
      image:
        type: string
    docker:
      - image: << parameters.image >>
    steps:
      - attach_workspace:
          at: .
      - run:
          name: "Run the skupper binary"
          command: |
            cd "dist/${CIRCLE_PROJECT_REPONAME}_linux_amd64_v1/"
            ./skupper site

